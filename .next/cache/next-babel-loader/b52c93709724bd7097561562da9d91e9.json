{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lbrito\\\\Dropbox\\\\Desarrollos\\\\Curriculum\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport ProyectsGrid from '../components/ChannelGrid';\nimport Error from './_error';\n\nconst Index = props => {\n  const {\n    channels,\n    statusCode\n  } = props;\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Podcats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(ProyectsGrid, {\n    channels: channels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nIndex.getInitialProps = async ({\n  res\n}) => {\n  try {\n    let req = await fetch('https://api.audioboom.com/channels/recommended');\n    let {\n      body: channels\n    } = await req.json();\n    return {\n      channels,\n      statusCode: 200\n    };\n  } catch (e) {\n    res.statusCode = 503;\n    return {\n      channel: null,\n      statusCode: 503\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/lbrito/Dropbox/Desarrollos/Curriculum/pages/index.js"],"names":["Layout","ProyectsGrid","Error","Index","props","channels","statusCode","getInitialProps","res","req","fetch","body","json","e","channel"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAyBF,KAA/B;;AACA,MAAGE,UAAU,KAAK,GAAlB,EAAsB;AAClB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAED,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAQH,CAdD;;AAgBAF,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACvC,MAAG;AACC,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,CAArB;AACA,QAAI;AAACC,MAAAA,IAAI,EAAEN;AAAP,QAAmB,MAAMI,GAAG,CAACG,IAAJ,EAA7B;AAEA,WAAO;AAAEP,MAAAA,QAAF;AAAYC,MAAAA,UAAU,EAAE;AAAxB,KAAP;AAEH,GAND,CAME,OAAMO,CAAN,EAAQ;AACNL,IAAAA,GAAG,CAACF,UAAJ,GAAiB,GAAjB;AACA,WAAO;AAAEQ,MAAAA,OAAO,EAAE,IAAX;AAAiBR,MAAAA,UAAU,EAAE;AAA7B,KAAP;AACH;AACJ,CAXD;;AAcA,eAAeH,KAAf","sourcesContent":["import 'isomorphic-unfetch';\r\nimport Layout from '../components/Layout';\r\nimport ProyectsGrid from '../components/ChannelGrid';\r\nimport Error from './_error';\r\n\r\nconst Index = (props) => {\r\n\r\n    const {channels, statusCode} = props;\r\n    if(statusCode !== 200){\r\n        return <Error statusCode={statusCode} />\r\n    }\r\n    return ( \r\n        <Layout title=\"Podcats\">\r\n  \r\n            <ProyectsGrid channels={channels} />\r\n\r\n        </Layout>\r\n    );\r\n\r\n}\r\n\r\nIndex.getInitialProps = async ({ res }) => {\r\n    try{\r\n        let req = await fetch('https://api.audioboom.com/channels/recommended');\r\n        let {body: channels} = await req.json();\r\n    \r\n        return { channels, statusCode: 200 }\r\n\r\n    } catch(e){\r\n        res.statusCode = 503\r\n        return { channel: null, statusCode: 503 }\r\n    }\r\n}\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}