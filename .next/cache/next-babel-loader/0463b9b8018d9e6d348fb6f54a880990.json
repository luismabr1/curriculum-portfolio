{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lmanu\\\\Dropbox\\\\Desarrollos\\\\Curriculum\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport ProyectsGrid from '../components/ProyectsGrid';\nimport PersonalData from '../components/PersonalData';\nimport RealizedStudies from '../components/RealizedStudies';\nimport WorkExperience from '../components/WorkExperience';\nimport Error from './_error';\n\nvar Index = function Index(props) {\n  var channels = props.channels,\n      statusCode = props.statusCode;\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Podcats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(PersonalData, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(RealizedStudies, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(WorkExperience, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(ProyectsGrid, {\n    channels: channels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n/* Index.getInitialProps = async ({ res }) => {\r\n    try{\r\n        let req = await fetch('https://api.audioboom.com/channels/recommended');\r\n        let {body: channels} = await req.json();\r\n    \r\n        return { channels, statusCode: 200 }\r\n\r\n    } catch(e){\r\n        res.statusCode = 503\r\n        return { channel: null, statusCode: 503 }\r\n    }\r\n} */\n\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/lmanu/Dropbox/Desarrollos/Curriculum/pages/index.js"],"names":["Layout","ProyectsGrid","PersonalData","RealizedStudies","WorkExperience","Error","Index","props","channels","statusCode"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MAEdC,QAFc,GAEUD,KAFV,CAEdC,QAFc;AAAA,MAEJC,UAFI,GAEUF,KAFV,CAEJE,UAFI;;AAGrB,MAAGA,UAAU,KAAK,GAAlB,EAAsB;AAClB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQI,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAED,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAcH,CApBD;AAsBA;;;;;;;;;;;;;;AAcA,eAAeF,KAAf","sourcesContent":["import 'isomorphic-unfetch';\r\nimport Layout from '../components/Layout';\r\nimport ProyectsGrid from '../components/ProyectsGrid';\r\nimport PersonalData from '../components/PersonalData';\r\nimport RealizedStudies from '../components/RealizedStudies';\r\nimport WorkExperience from '../components/WorkExperience';\r\nimport Error from './_error';\r\n\r\nconst Index = (props) => {\r\n\r\n    const {channels, statusCode} = props;\r\n    if(statusCode !== 200){\r\n        return <Error statusCode={statusCode} />\r\n    }\r\n    return ( \r\n        <Layout title=\"Podcats\">\r\n\r\n            <PersonalData />\r\n\r\n            <RealizedStudies />\r\n\r\n            <WorkExperience /> \r\n  \r\n            <ProyectsGrid channels={channels} />\r\n\r\n        </Layout>\r\n    );\r\n\r\n}\r\n\r\n/* Index.getInitialProps = async ({ res }) => {\r\n    try{\r\n        let req = await fetch('https://api.audioboom.com/channels/recommended');\r\n        let {body: channels} = await req.json();\r\n    \r\n        return { channels, statusCode: 200 }\r\n\r\n    } catch(e){\r\n        res.statusCode = 503\r\n        return { channel: null, statusCode: 503 }\r\n    }\r\n} */\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}